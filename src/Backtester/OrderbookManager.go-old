package main

import (
    "fmt"
	"os"
)

func createSpread(weight int32, confidence float64, price float64, spread float64, tick_size float64, max_orders int32) ([]float64, []float64) {
	if weight == 1 {
		x_start := price - (price*spread)
	} else {
		x_start := price
	}

	x_end := x_start + (x_start*spread)
	diff := x_end - x_start

	if diff / tick_size >= max_orders:
		tick_size = diff / (max_orders-1)

	price_arr := arange(x_start, x_end, tick_size)
	temp := (price_arr/x_start)-1

	dist = np.array([ x ** confidence for x in temp ])

	normalizer = 1/sum(dist)
	order_arr = (dist*normalizer)
	return price_arr, order_arr
}

func arange(min float64, max float64, step float64) []float64 {
    a := make([]float64, max-min+1)
    for i := range a {
        a[i] = min + i
    }
    return a
}